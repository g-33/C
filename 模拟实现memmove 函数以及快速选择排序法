//模拟实现memmove函数。
#include<stdio.h>
#include<stdlib.h>
#include<assert.h>

void *my_memmove(void *dest,const void *src,int count)
{
	void*ret = dest;
	assert(dest);	
	assert(src);	
	if((dest>src)&&((char *)dest<(char *)src+count))
	{
		while(count--)
		{
			*((char *)dest +count)=*((char *)src+count);
		}
	}
	else
		while(count--)
		{
			*(char*)dest=*(char*)src;
			dest=(char*)dest+1;
			src=(char *)src+1;
		}
		return ret;
}
int main()
{
	int arr[] = {1,2,3,4,5,6,7,8,9,0};
	int i = 0;
	my_memmove(arr+2,arr,4*sizeof(int));
	for(i=0;i<10;i++)
	{
		printf("%d ",arr[i]);
	}
	system("pause");
	return 0;
}
//实现一个选择排序程序，排序整型数组。
#include<stdio.h>
#include<stdlib.h>
void select_sort(int arr[],int n)
{
	int k =0 ;
	int i =0;
	int j = 0;
	for(i=0;i<n;i++)
	{
		k=i;
		for( j=i+1;j<n;j++)
		{
			if(arr[j]<arr[k])
				k = j;
		}
		if(k!=i)
		{
			int temp = arr[i];
			arr[i]=arr[k];
			arr[k]=temp;
		}
	}
}
int main()
{
	int arr[] = {34,12,45,67,54,78,23,89};
	int sz = sizeof(arr)/sizeof(arr[0]);
	int i=0;
	select_sort(arr,sz);
	for(i=0;i<sz;i++)
	{
		printf("%d ",arr[i]);
	}
	system("pause");
	return 0;
}
